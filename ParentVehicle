// 1) Create a first "ParentVehicle" contract that includes the following functions
// start - returns String message” The Vehicle has just Started”
// accelerate - returns String message” The Vehicle has just Accelerated”
// stop -- returns String message” The Vehicle has just Stopped”
// service- returns String message” The Vehicle is being serviced”

// 2) Next Create following Child contracts for a different type of vehicles, that inherits Vehicle
// Cars
// Truck
// MotorCycle,

// (The contract shall override the Service Method to return, w Cars/ Truck/ Motor Cycle is being serviced)

// 3) Then create smart contracts for “Alto Mehran, “ Hino, Yamaha, that may inherit the relevant smart contract(s) as in step 2.

// 4)
// Create 3 Service Stations for each vehicle type, with the same
// function “vehicleService that takes the address of the deployed
// contracts of step 3, in the “Vehicle” variable to call the service
// function

contract ParentVehicle{

function start() public returns(string memory){
    return("The Vehicle has just started");
}    
    
    
function accerlate() public returns(string memory){
    return("the vehicle has just accerlated");
}    


function stop() public returns(string memory){
    return("The vehicle has just stopped");
}


function service() public virtual returns(string memory){
    return("the vehicle has just been serviced");
}

    
    
}


contract childcars is ParentVehicle{
    function service() public override returns(string memory){
    return("the CAR has just  serviced");
    }
}



contract childtrucks is ParentVehicle{
    
     function service() public override returns(string memory){
        return("the truck has just  serviced");
    }
    
}


contract childmotorcycle is ParentVehicle{
       function service() public override returns(string memory){
        return("the MOTORCYCLE has just  serviced");
    }
    
}



// hen create smart contracts for “Alto Mehran, “ Hino, Yamaha, that may inherit the relevant smart contract(s) as in step 2.

contract AltoMehran is childcars{
    function service_ALTO() public returns(string memory){
       call super.service();
    }
    
}

contract Hino is childtrucks{
      function service_HINO() public returns(string memory){
       call super.service();
    }
}


contract Yamaha is childmotorcycle{
      function service_YAMAHA() public returns(string memory){
       call super.service();
    }
}








